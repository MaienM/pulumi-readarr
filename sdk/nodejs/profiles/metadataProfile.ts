// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Profiles -->Metadata Profile resource.
 * For more information refer to [Metadata Profile](https://wiki.servarr.com/readarr/settings#metadata-profiles) documentation.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as readarr from "@maienm/pulumi-readarr";
 *
 * const example = new readarr.profiles.MetadataProfile("example", {
 *     allowedLanguages: "eng,ita",
 *     minPages: 10,
 *     minPopularity: 3.5,
 *     name: "Example",
 *     skipMissingDate: false,
 *     skipMissingIsbn: true,
 *     skipPartsAndSets: false,
 *     skipSeriesSecondary: false,
 * });
 * ```
 *
 * ## Import
 *
 * import using the API/UI ID
 *
 * ```sh
 *  $ pulumi import readarr:Profiles/metadataProfile:MetadataProfile example 10
 * ```
 */
export class MetadataProfile extends pulumi.CustomResource {
    /**
     * Get an existing MetadataProfile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MetadataProfileState, opts?: pulumi.CustomResourceOptions): MetadataProfile {
        return new MetadataProfile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'readarr:Profiles/metadataProfile:MetadataProfile';

    /**
     * Returns true if the given object is an instance of MetadataProfile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is MetadataProfile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === MetadataProfile.__pulumiType;
    }

    /**
     * Allowed languages. Comma separated list of ISO 639-3 language codes.
     */
    public readonly allowedLanguages!: pulumi.Output<string>;
    /**
     * Terms to ignore. Comma separated list.
     */
    public readonly ignored!: pulumi.Output<string>;
    /**
     * Minimum pages.
     */
    public readonly minPages!: pulumi.Output<number>;
    /**
     * Minimum popularity.
     */
    public readonly minPopularity!: pulumi.Output<number>;
    /**
     * Metadata Profile name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Skip missing date.
     */
    public readonly skipMissingDate!: pulumi.Output<boolean>;
    /**
     * Skip missing ISBN.
     */
    public readonly skipMissingIsbn!: pulumi.Output<boolean>;
    /**
     * Skip parts and sets.
     */
    public readonly skipPartsAndSets!: pulumi.Output<boolean>;
    /**
     * Skip secondary series books.
     */
    public readonly skipSeriesSecondary!: pulumi.Output<boolean>;

    /**
     * Create a MetadataProfile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MetadataProfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: MetadataProfileArgs | MetadataProfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as MetadataProfileState | undefined;
            resourceInputs["allowedLanguages"] = state ? state.allowedLanguages : undefined;
            resourceInputs["ignored"] = state ? state.ignored : undefined;
            resourceInputs["minPages"] = state ? state.minPages : undefined;
            resourceInputs["minPopularity"] = state ? state.minPopularity : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["skipMissingDate"] = state ? state.skipMissingDate : undefined;
            resourceInputs["skipMissingIsbn"] = state ? state.skipMissingIsbn : undefined;
            resourceInputs["skipPartsAndSets"] = state ? state.skipPartsAndSets : undefined;
            resourceInputs["skipSeriesSecondary"] = state ? state.skipSeriesSecondary : undefined;
        } else {
            const args = argsOrState as MetadataProfileArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["allowedLanguages"] = args ? args.allowedLanguages : undefined;
            resourceInputs["ignored"] = args ? args.ignored : undefined;
            resourceInputs["minPages"] = args ? args.minPages : undefined;
            resourceInputs["minPopularity"] = args ? args.minPopularity : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["skipMissingDate"] = args ? args.skipMissingDate : undefined;
            resourceInputs["skipMissingIsbn"] = args ? args.skipMissingIsbn : undefined;
            resourceInputs["skipPartsAndSets"] = args ? args.skipPartsAndSets : undefined;
            resourceInputs["skipSeriesSecondary"] = args ? args.skipSeriesSecondary : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(MetadataProfile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering MetadataProfile resources.
 */
export interface MetadataProfileState {
    /**
     * Allowed languages. Comma separated list of ISO 639-3 language codes.
     */
    allowedLanguages?: pulumi.Input<string>;
    /**
     * Terms to ignore. Comma separated list.
     */
    ignored?: pulumi.Input<string>;
    /**
     * Minimum pages.
     */
    minPages?: pulumi.Input<number>;
    /**
     * Minimum popularity.
     */
    minPopularity?: pulumi.Input<number>;
    /**
     * Metadata Profile name.
     */
    name?: pulumi.Input<string>;
    /**
     * Skip missing date.
     */
    skipMissingDate?: pulumi.Input<boolean>;
    /**
     * Skip missing ISBN.
     */
    skipMissingIsbn?: pulumi.Input<boolean>;
    /**
     * Skip parts and sets.
     */
    skipPartsAndSets?: pulumi.Input<boolean>;
    /**
     * Skip secondary series books.
     */
    skipSeriesSecondary?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a MetadataProfile resource.
 */
export interface MetadataProfileArgs {
    /**
     * Allowed languages. Comma separated list of ISO 639-3 language codes.
     */
    allowedLanguages?: pulumi.Input<string>;
    /**
     * Terms to ignore. Comma separated list.
     */
    ignored?: pulumi.Input<string>;
    /**
     * Minimum pages.
     */
    minPages?: pulumi.Input<number>;
    /**
     * Minimum popularity.
     */
    minPopularity?: pulumi.Input<number>;
    /**
     * Metadata Profile name.
     */
    name: pulumi.Input<string>;
    /**
     * Skip missing date.
     */
    skipMissingDate?: pulumi.Input<boolean>;
    /**
     * Skip missing ISBN.
     */
    skipMissingIsbn?: pulumi.Input<boolean>;
    /**
     * Skip parts and sets.
     */
    skipPartsAndSets?: pulumi.Input<boolean>;
    /**
     * Skip secondary series books.
     */
    skipSeriesSecondary?: pulumi.Input<boolean>;
}
