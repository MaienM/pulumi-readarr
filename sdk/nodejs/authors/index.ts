// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AuthorArgs, AuthorState } from "./author";
export type Author = import("./author").Author;
export const Author: typeof import("./author").Author = null as any;
utilities.lazyLoad(exports, ["Author"], () => require("./author"));

export { GetAuthorArgs, GetAuthorResult, GetAuthorOutputArgs } from "./getAuthor";
export const getAuthor: typeof import("./getAuthor").getAuthor = null as any;
export const getAuthorOutput: typeof import("./getAuthor").getAuthorOutput = null as any;
utilities.lazyLoad(exports, ["getAuthor","getAuthorOutput"], () => require("./getAuthor"));

export { GetAuthorsResult } from "./getAuthors";
export const getAuthors: typeof import("./getAuthors").getAuthors = null as any;
utilities.lazyLoad(exports, ["getAuthors"], () => require("./getAuthors"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "readarr:Authors/author:Author":
                return new Author(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("readarr", "Authors/author", _module)
