// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * <!-- subcategory:Authors -->Single Author.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as readarr from "@pulumi/readarr";
 *
 * const example = readarr.Authors.getAuthor({
 *     foreignAuthorId: "123715",
 * });
 * ```
 */
export function getAuthor(args: GetAuthorArgs, opts?: pulumi.InvokeOptions): Promise<GetAuthorResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("readarr:Authors/getAuthor:getAuthor", {
        "foreignAuthorId": args.foreignAuthorId,
    }, opts);
}

/**
 * A collection of arguments for invoking getAuthor.
 */
export interface GetAuthorArgs {
    /**
     * Foreign author ID.
     */
    foreignAuthorId: string;
}

/**
 * A collection of values returned by getAuthor.
 */
export interface GetAuthorResult {
    /**
     * Author name.
     */
    readonly authorName: string;
    /**
     * Foreign author ID.
     */
    readonly foreignAuthorId: string;
    /**
     * List genres.
     */
    readonly genres: string[];
    /**
     * Author ID.
     */
    readonly id: number;
    /**
     * Monitored flag.
     */
    readonly monitored: boolean;
    /**
     * Overview.
     */
    readonly overview: string;
    /**
     * Full author path.
     */
    readonly path: string;
    /**
     * Quality profile ID.
     */
    readonly qualityProfileId: number;
    /**
     * Author status.
     */
    readonly status: string;
    /**
     * List of associated tags.
     */
    readonly tags: number[];
}
/**
 * <!-- subcategory:Authors -->Single Author.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as readarr from "@pulumi/readarr";
 *
 * const example = readarr.Authors.getAuthor({
 *     foreignAuthorId: "123715",
 * });
 * ```
 */
export function getAuthorOutput(args: GetAuthorOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAuthorResult> {
    return pulumi.output(args).apply((a: any) => getAuthor(a, opts))
}

/**
 * A collection of arguments for invoking getAuthor.
 */
export interface GetAuthorOutputArgs {
    /**
     * Foreign author ID.
     */
    foreignAuthorId: pulumi.Input<string>;
}
